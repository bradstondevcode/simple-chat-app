{"version":3,"sources":["logo.svg","components/CurrentUserText.js","components/OtherUserText.js","components/ChatNotification.js","services/socket.js","pages/ChatRoom.js","pages/ClearChat.js","App.js","reportWebVitals.js","index.js"],"names":["styles","currentUserTextContainer","marginBottom","flex","justifyContent","display","marginLeft","textBubble","padding","backgroundColor","borderRadius","textAlign","color","usernameText","fontSize","CurrentUserText","props","state","username","message","this","timestamp","setState","chatRoomData","Row","style","Container","Component","userTextContainer","marginRight","OtherUserText","ChatNotification","socket","socketIOClient","transports","chatRoomContainer","marginTop","header","height","alignItems","borderTopLeftRadius","borderTopRightRadius","flexDirection","headerText","youAppearAsText","fontWeight","chatThread","overflowY","width","alignSelf","paddingBottom","border","borderBottomLeftRadius","borderBottomRightRadius","messageInputSection","messageTextField","messageSubmitButton","ChatRoom","currentUsername","currentUserID","initialLoad","messagesEndRef","React","createRef","userIDVal","localStorage","getItem","usernameVal","emit","userID","on","userData","setItem","console","log","shouldScrollToBottom","off","length","timeStamp","current","scrollHeight","scrollTop","offsetHeight","scrollToBottom","ref","map","messageData","index","TextField","id","label","variant","value","onChange","event","setMessage","target","onKeyPress","key","sendMessageData","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Button","clearChatData","App","className","exact","path","ClearChat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c35afa9a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  currentUserTextContainer: {\n  \tmarginBottom: 20,\n  \tflex: 0,\n  \tjustifyContent: 'flex-end',\n  \tdisplay: 'flex',\n  \tmarginLeft: '25%',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tbackgroundColor: '#0071BC',\n  \tjustifyContent: 'flex-start',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \tborderRadius: 8,\n  \ttextAlign: 'right',\n  \tcolor:'white'\n  },\n  usernameText:{\n  \tfontSize:9\n  }\n}\n\n class CurrentUserText extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, username, timestamp} = this.props\n\n\t\tif(username){\n\t\t\tthis.setState({username: username})\n\t\t}\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\t\n\trender(){\n\t\tconst {username, message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.currentUserTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default CurrentUserText;","import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  userTextContainer: {\n  \tmarginBottom: 20,\n  \tmarginRight: '25%',\n  \tflex: 0,\n  \tjustifyContent: 'flex-start',\n  \tdisplay: 'flex',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tbackgroundColor: '#E6E6E6',\n  \tjustifyContent: 'flex-start',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \ttextAlign: 'left',\n  \tborderRadius: 8,\n  \tcolor:'black'\n  },\n  usernameText:{\n  \tfontSize:12,\n  \tdisplay: 'flex',\n  \tjustifyContent: 'flex-start',\n  \tmarginBottom: 3,\n  }\n}\n\nclass OtherUserText extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, username, timestamp} = this.props\n\n\t\tif(username){\n\t\t\tthis.setState({username: username})\n\t\t}\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\trender(){\n\t\tconst {username, message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.userTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.usernameText}>\n\t\t\t\t\t\t{username}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OtherUserText;","import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  currentUserTextContainer: {\n  \tmarginBottom: 10,\n  \tflex: 0,\n  \tjustifyContent: 'center',\n  \tdisplay: 'flex',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tjustifyContent: 'center',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \tborderRadius: 8,\n  \tfontSize: 14,\n  \tcolor: 'rgba(0, 0, 0, 0.50)'\n  },\n  usernameText:{\n  \tfontSize: 9\n  }\n}\n\nclass ChatNotification extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, timestamp} = this.props\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\t\n\trender(){\n\t\tconst {message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.currentUserTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default ChatNotification;","import socketIOClient from \"socket.io-client\";\n\nconst serverEndpoint = \"https://simple-node-chat-server-bsh.us-south.cf.appdomain.cloud/\";\n\nexport const socket = socketIOClient(serverEndpoint, {\n\ttransports: ['websocket']\n});\n","import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Row, Container } from 'react-bootstrap';\n\nimport CurrentUserText from '../components/CurrentUserText'\nimport OtherUserText from '../components/OtherUserText'\nimport ChatNotification from '../components/ChatNotification'\n\nimport {socket} from '../services/socket'\n\nlet styles = {\n\tchatRoomContainer: {\n\t\tmarginTop: 10,\n\t},\n\theader:{\n\t\theight: \"7vh\",\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.25)',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tdisplay: 'flex',\n\t\tborderTopLeftRadius: 8,\n\t\tborderTopRightRadius: 8,\n\t\tflexDirection: 'column',\n\t},\n\theaderText: {\n\t\tfontSize: 20,\n\t},\n\tyouAppearAsText: {\n\t\tfontSize: 14,\n\t\tmarginTop: 5,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t},\n\tusernameText:{\n\t\tfontWeight: 'bold',\n\t\tmarginLeft: 3,\n\t\tmarginRight: 3,\n\t},\n\tchatThread: {\n\t\tbackgroundColor: 'rgba(227, 227, 227, 0.2)',\n\t\tflex: 0,\n\t\tdisplay: 'flex',\n    \tflexDirection: 'column',\n    \theight: \"75vh\",\n    \toverflowY: 'auto',\n    \twidth: '45vw',\n    \talignSelf: 'center',\n    \tpadding: 20,\n    \tpaddingBottom: 40,\n    \tborder: '1px solid rgba(0, 0, 0, 0.2)',\n    \tborderBottomLeftRadius: 8,\n\t\tborderBottomRightRadius: 8,\n    \tmarginBottom: 8\n\t},\n\tmessageInputSection: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tmessageTextField: {\n\t\tflex: 1\n\t},\n\tmessageSubmitButton: {\n\t\tflex: 0\n\t}\n\n}\n\nconst autoScrollOffset = 100 //offset value that allows screen to auto scroll when you are not exactly at bottom of chat window\n\nclass ChatRoom extends Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tcurrentUsername: \"User1\",\n\t    \tcurrentUserID: 1,\n\t    \tmessage: '',\n\t    \tchatRoomData: [\n\t    \t],\n\t    \tinitialLoad: true,\n\t    };\n\t    //Create Ref for managing \"auto-scroll\"\n\t    this.messagesEndRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\n\t\t// localStorage.removeItem('userID')\n\t\t// localStorage.removeItem('username')\n\n\t\tlet userIDVal = localStorage.getItem('userID')\n\t\tlet usernameVal = localStorage.getItem('username')\n\n\t\t//If user does not have a userid and username saved in local storage, create them for them\n\t\tif(!userIDVal){\n\n\t      socket.on(\"SetUserData\", userData => {\n\t        //When user creation on server is complete, retrieve and save data to local storage\n\t        localStorage.setItem('userID', userData.userID)\n\t        localStorage.setItem('username', userData.username)\n\t        console.log(userData)\n\n\t        this.setState({currentUsername: userData.username, currentUserID: userData.userID})\n\n\t        //Notify Socket server is not ready to chat\n\t        socket.emit(\"UserEnteredRoom\", userData)\n\t      });\n\n\t      //Send Socket command to create user info for current user\n\t      socket.emit(\"CreateUserData\")\n\t    } \n\t    else {\n\t    \t//If user already has userid and username, notify server to allow them to join chat\n\t    \tthis.setState({currentUsername: usernameVal, currentUserID: userIDVal})\n\t    \tsocket.emit(\"UserEnteredRoom\", {userID: userIDVal, username: usernameVal})\n\t    }\n\n\t    //Retrieve game data (from Get Chat data socket call)\n\t    socket.on(\"RetrieveChatRoomData\", (chatRoomData) => {\n\t    \tthis.setState({chatRoomData: chatRoomData}, () => this.shouldScrollToBottom())\n\t    })\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\tsocket.off(\"RetrieveChatRoomData\")\n\t\tsocket.off(\"SetUserData\")\n\t}\n\n\tsetMessage(message){\n\t\t//Set Message being typed in input field\n\t\tthis.setState({message: message})\n\t}\n\n\tsendMessageData(){\n\t\tvar {message, currentUsername, currentUserID} = this.state\n\n\t\tif(message.length > 0){\n\t\t\t//Send chat message to server...\n\t\t\tsocket.emit(\"SendMessage\", {message: message, username: currentUsername, userID: currentUserID, timeStamp: null})\n\t\t\t//Clear chat message textfield box\n\t\t\tthis.setState({message: ''})\n\t\t}\n\t}\n\n\n\tshouldScrollToBottom(){\n\t\t//If user is near the bottom of the chat, automatically navigate them to bottom when new chat message/notification appears\n\t\tif (this.messagesEndRef.current.scrollHeight - this.messagesEndRef.current.scrollTop < this.messagesEndRef.current.offsetHeight + autoScrollOffset){\n\t\t\tthis.scrollToBottom()\n\t\t}\n\n\t\t//Navigate to end of chat when entering chat the first time\n\t\tif(this.state.initialLoad){\n\t\t\tthis.scrollToBottom()\n\t\t\tthis.setState({initialLoad: false})\n\t\t}\n\t}\n\n\tscrollToBottom(){\n\t\t//Scrolls user to end of chat message window\n\t\tthis.messagesEndRef.current.scrollTop = this.messagesEndRef.current.scrollHeight\n\t}\n\n\n\trender(){\n\n\t\tlet {chatRoomData, currentUsername} = this.state\n\n\t\treturn (\n\t\t\t<Container style = {styles.chatRoomContainer}>\n\n\t\t\t\t<Container style ={styles.header}>\n\t\t\t\t\t<Row style={styles.headerText}>Chat Room</Row>\n\t\t\t\t\t<Row style={styles.youAppearAsText}>\n\t\t\t\t\t\tYou appear as \n\t\t\t\t\t\t<div style={styles.usernameText}> {currentUsername}</div>\n\t\t\t\t\t\tin chat\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t\n\n\t\t\t\t<Container style={styles.chatThread} ref={this.messagesEndRef}>\n\t\t\t\t\t{chatRoomData.map( (messageData, index) => {\n\n\t\t\t\t\t\tif(messageData.username == currentUsername) {\n\t\t\t    \t\t\treturn <CurrentUserText key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t} else if (messageData.username == '') {\n\t\t\t    \t\t\treturn <ChatNotification key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t} else {\n\t\t\t    \t\t\treturn <OtherUserText key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t}\n\t\t    \t\t\t\n\t\t    \t\t})}\n\n\t  \t\t\t\t\n\t    \t\t</Container>\n\n\t    \t\t<Container style={styles.messageInputSection}>\n\t\t\t    \t\t<TextField \n\t\t\t    \t\t\tstyle= {styles.messageTextField}\n\t\t\t    \t\t\tid=\"input-with-icon-adornment\" \n\t\t\t    \t\t\tlabel=\"Enter Message\" \n\t\t\t    \t\t\tvariant=\"outlined\"  \n\t\t\t    \t\t\tvalue={this.state.message} \n\t\t\t    \t\t\tonChange={(event) => this.setMessage(event.target.value)}\n\t\t\t    \t\t\tonKeyPress= {(event) => {\n\t\t\t\t\t            if (event.key === 'Enter') {\n\t\t\t\t\t              console.log('Enter key pressed');\n\t\t\t\t\t              this.sendMessageData()\n\t\t\t\t\t            }\n\t\t\t\t\t\t    }}\n\t\t\t\t\t\t    InputProps={{\n\t\t\t\t\t\t    \tendAdornment:(\n\t\t\t\t\t\t\t    \t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t    \t\t<IconButton onClick={() => this.sendMessageData()}>\n\t\t\t\t\t\t\t    \t\t\t<SendIcon/>\n\t\t\t\t\t\t\t    \t\t</IconButton>\n\t\t\t\t\t\t\t    \t</InputAdornment>\n\t\t\t\t\t\t\t    )\n\t\t\t\t\t\t    }}\n\t\t\t    \t\t/>\n\t\t\t\t</Container>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;","import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Row, Container } from 'react-bootstrap';\n\nimport {socket} from '../services/socket'\n\n\nconst autoScrollOffset = 100 //offset value that allows screen to auto scroll when you are not exactly at bottom of chat window\n\nclass ChatRoom extends Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tcurrentUsername: \"User1\",\n\t    \tcurrentUserID: 1,\n\t    \tmessage: '',\n\t    \tchatRoomData: [\n\t    \t],\n\t    \tinitialLoad: true,\n\t    };\n\t    //Create Ref for managing \"auto-scroll\"\n\t    this.messagesEndRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\n\t}\n\n\tclearChatData(){\n\t\tsocket.emit(\"ClearChat\")\n\t\tconsole.log(\"Clearing Chat\")\n\t}\n\n\trender(){\n\n\t\tlet {chatRoomData, currentUsername} = this.state\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<div>Clear Chat</div>\n\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={ () => this.clearChatData()}>\n\t\t\t \t\t Clear Chat Data\n\t\t\t\t</Button>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;","import logo from './logo.svg';\nimport './App.css';\n\nimport ChatRoom from './pages/ChatRoom'\nimport ClearChat from './pages/ClearChat'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" style={{justifyContent:'center', display: 'flex'}}>\n\n        <Switch>\n\n          <Route exact path=\"/\">\n            <ChatRoom/>\n          </Route>\n\n          <Route exact path=\"/clearChat\">\n            <ClearChat/>\n          </Route>\n\n\n        </Switch>\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}