[{"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/index.js":"1","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/App.js":"2","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/reportWebVitals.js":"3","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/pages/ChatRoom.js":"4","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/pages/ClearChat.js":"5","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/services/socket.js":"6","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/CurrentUserText.js":"7","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/OtherUserText.js":"8","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/ChatNotification.js":"9","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/config.js":"10"},{"size":500,"mtime":1619451676522,"results":"11","hashOfConfig":"12"},{"size":605,"mtime":1619547040696,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1619451676524,"results":"14","hashOfConfig":"12"},{"size":8147,"mtime":1629906692580,"results":"15","hashOfConfig":"12"},{"size":1042,"mtime":1619547362775,"results":"16","hashOfConfig":"12"},{"size":390,"mtime":1629906921201,"results":"17","hashOfConfig":"12"},{"size":1158,"mtime":1619547717719,"results":"18","hashOfConfig":"12"},{"size":1282,"mtime":1619547726837,"results":"19","hashOfConfig":"12"},{"size":1030,"mtime":1619547737988,"results":"20","hashOfConfig":"12"},{"size":75,"mtime":1629836876483,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hyep61",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/index.js",[],["49","50"],"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/App.js",["51"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ChatRoom from './pages/ChatRoom'\nimport ClearChat from './pages/ClearChat'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" style={{justifyContent:'center', display: 'flex'}}>\n\n        <Switch>\n\n          <Route exact path=\"/\">\n            <ChatRoom/>\n          </Route>\n\n          <Route exact path=\"/clearChat\">\n            <ClearChat/>\n          </Route>\n\n\n        </Switch>\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/reportWebVitals.js",[],"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/pages/ChatRoom.js",["52","53","54"],"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/pages/ClearChat.js",["55","56","57","58"],"import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Row, Container } from 'react-bootstrap';\n\nimport {socket} from '../services/socket'\n\n\nconst autoScrollOffset = 100 //offset value that allows screen to auto scroll when you are not exactly at bottom of chat window\n\nclass ChatRoom extends Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tcurrentUsername: \"User1\",\n\t    \tcurrentUserID: 1,\n\t    \tmessage: '',\n\t    \tchatRoomData: [\n\t    \t],\n\t    \tinitialLoad: true,\n\t    };\n\t    //Create Ref for managing \"auto-scroll\"\n\t    this.messagesEndRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\n\t}\n\n\tclearChatData(){\n\t\tsocket.emit(\"ClearChat\")\n\t\tconsole.log(\"Clearing Chat\")\n\t}\n\n\trender(){\n\n\t\tlet {chatRoomData, currentUsername} = this.state\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<div>Clear Chat</div>\n\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={ () => this.clearChatData()}>\n\t\t\t \t\t Clear Chat Data\n\t\t\t\t</Button>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/services/socket.js",[],"/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/CurrentUserText.js",["59","60","61"],"import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  currentUserTextContainer: {\n  \tmarginBottom: 20,\n  \tflex: 0,\n  \tjustifyContent: 'flex-end',\n  \tdisplay: 'flex',\n  \tmarginLeft: '25%',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tbackgroundColor: '#0071BC',\n  \tjustifyContent: 'flex-start',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \tborderRadius: 8,\n  \ttextAlign: 'right',\n  \tcolor:'white'\n  },\n  usernameText:{\n  \tfontSize:9\n  }\n}\n\n class CurrentUserText extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, username, timestamp} = this.props\n\n\t\tif(username){\n\t\t\tthis.setState({username: username})\n\t\t}\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\t\n\trender(){\n\t\tconst {username, message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.currentUserTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default CurrentUserText;","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/OtherUserText.js",["62","63"],"import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  userTextContainer: {\n  \tmarginBottom: 20,\n  \tmarginRight: '25%',\n  \tflex: 0,\n  \tjustifyContent: 'flex-start',\n  \tdisplay: 'flex',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tbackgroundColor: '#E6E6E6',\n  \tjustifyContent: 'flex-start',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \ttextAlign: 'left',\n  \tborderRadius: 8,\n  \tcolor:'black'\n  },\n  usernameText:{\n  \tfontSize:12,\n  \tdisplay: 'flex',\n  \tjustifyContent: 'flex-start',\n  \tmarginBottom: 3,\n  }\n}\n\nclass OtherUserText extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, username, timestamp} = this.props\n\n\t\tif(username){\n\t\t\tthis.setState({username: username})\n\t\t}\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\trender(){\n\t\tconst {username, message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.userTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.usernameText}>\n\t\t\t\t\t\t{username}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OtherUserText;","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/components/ChatNotification.js",["64","65"],"import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  currentUserTextContainer: {\n  \tmarginBottom: 10,\n  \tflex: 0,\n  \tjustifyContent: 'center',\n  \tdisplay: 'flex',\n  },\n  textBubble: {\n  \tpadding: 10,\n  \tjustifyContent: 'center',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \tborderRadius: 8,\n  \tfontSize: 14,\n  \tcolor: 'rgba(0, 0, 0, 0.50)'\n  },\n  usernameText:{\n  \tfontSize: 9\n  }\n}\n\nclass ChatNotification extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, timestamp} = this.props\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\t\n\trender(){\n\t\tconst {message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.currentUserTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default ChatNotification;","/Users/bradston/Documents/Dev_Advocate/Webinars/Red Hat OpenShift 1000/RHOS 1002/Code/simple-chat-app/simple-react-chat-app/src/config.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":245,"column":31,"nodeType":"79","messageId":"80","endLine":245,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":247,"column":42,"nodeType":"79","messageId":"80","endLine":247,"endColumn":44},{"ruleId":"72","severity":1,"message":"81","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"82","line":8,"column":7,"nodeType":"74","messageId":"75","endLine":8,"endColumn":23},{"ruleId":"72","severity":1,"message":"83","line":37,"column":8,"nodeType":"74","messageId":"75","endLine":37,"endColumn":20},{"ruleId":"72","severity":1,"message":"84","line":37,"column":22,"nodeType":"74","messageId":"75","endLine":37,"endColumn":37},{"ruleId":"72","severity":1,"message":"85","line":38,"column":27,"nodeType":"74","messageId":"75","endLine":38,"endColumn":36},{"ruleId":"72","severity":1,"message":"86","line":55,"column":10,"nodeType":"74","messageId":"75","endLine":55,"endColumn":18},{"ruleId":"72","severity":1,"message":"83","line":57,"column":8,"nodeType":"74","messageId":"75","endLine":57,"endColumn":20},{"ruleId":"72","severity":1,"message":"85","line":41,"column":27,"nodeType":"74","messageId":"75","endLine":41,"endColumn":36},{"ruleId":"72","severity":1,"message":"83","line":59,"column":8,"nodeType":"74","messageId":"75","endLine":59,"endColumn":20},{"ruleId":"72","severity":1,"message":"85","line":36,"column":17,"nodeType":"74","messageId":"75","endLine":36,"endColumn":26},{"ruleId":"72","severity":1,"message":"83","line":51,"column":8,"nodeType":"74","messageId":"75","endLine":51,"endColumn":20},{"ruleId":"68","replacedBy":"87"},{"ruleId":"70","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'autoScrollOffset' is assigned a value but never used.","'chatRoomData' is assigned a value but never used.","'currentUsername' is assigned a value but never used.","'timestamp' is assigned a value but never used.","'username' is assigned a value but never used.",["89"],["90"],"no-global-assign","no-unsafe-negation"]