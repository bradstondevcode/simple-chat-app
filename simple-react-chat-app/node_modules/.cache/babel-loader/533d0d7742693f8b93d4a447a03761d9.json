{"ast":null,"code":"var _jsxFileName = \"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/components/OtherUserText.js\";\nimport React, { Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet styles = {\n  currentUserTextContainer: {\n    marginBottom: 10,\n    flex: 0,\n    // width: 300,\n    justifyContent: 'flex-start',\n    display: 'flex'\n  },\n  textBubble: {\n    padding: 10,\n    backgroundColor: '#E6E6E6',\n    justifyContent: 'flex-start',\n    flex: 0,\n    display: 'flex',\n    textAlign: 'left',\n    borderRadius: 8\n  },\n  usernameText: {\n    fontSize: 9,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  dadJokesLogo: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    width: '70vh'\n  },\n  bodyContainer: {\n    backgroundColor: 'rgba(52, 52, 52, 0.0)',\n    width: '70vh',\n    height: '100vh',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute'\n  },\n  dadJokeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  middleBG: {\n    height: '100vh',\n    alignSelf: 'center'\n  },\n  dadJokeTextRow: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex'\n  },\n  dadJokeText: {\n    textAlign: 'center',\n    fontSize: '3vh',\n    alignSelf: 'center',\n    position: 'absolute',\n    width: '60vh'\n  },\n  jokeBoxBG: {\n    marginLeft: 50,\n    marginRight: 50,\n    flex: 2,\n    display: 'flex',\n    width: '65vh',\n    alignSelf: 'center'\n  },\n  gifFrame: {\n    flex: 2\n  },\n  giphyLink: {\n    fontSize: 15,\n    marginBottom: 50\n  },\n  getDadJokeButton: {\n    fontSize: 25,\n    height: 40,\n    width: \"73.375vh\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: '#F7931E',\n    borderWidth: 0\n  },\n  credits: {\n    position: 'absolute',\n    right: 15,\n    fontSize: '1.5vw',\n    textAlign: 'center',\n    bottom: 0,\n    color: '#E6E6E6'\n  }\n};\n\nclass OtherUserText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    var {\n      message,\n      username,\n      timestamp\n    } = this.props;\n\n    if (username) {\n      this.setState({\n        username: username\n      });\n    }\n\n    if (message) {\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      username,\n      message\n    } = this.state;\n    let {\n      chatRoomData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      style: styles.currentUserTextContainer,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          style: styles.usernameText,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: styles.textBubble,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default OtherUserText;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/components/OtherUserText.js"],"names":["React","Component","Row","Container","styles","currentUserTextContainer","marginBottom","flex","justifyContent","display","textBubble","padding","backgroundColor","textAlign","borderRadius","usernameText","fontSize","dadJokesLogo","marginLeft","marginRight","marginTop","width","bodyContainer","height","alignItems","flexDirection","position","dadJokeContainer","middleBG","alignSelf","dadJokeTextRow","dadJokeText","jokeBoxBG","gifFrame","giphyLink","getDadJokeButton","borderWidth","credits","right","bottom","color","OtherUserText","constructor","props","state","username","message","componentDidMount","timestamp","setState","componentWillUnmount","render","chatRoomData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,wBAAwB,EAAE;AACzBC,IAAAA,YAAY,EAAE,EADW;AAEzBC,IAAAA,IAAI,EAAE,CAFmB;AAGzB;AACAC,IAAAA,cAAc,EAAE,YAJS;AAKzBC,IAAAA,OAAO,EAAE;AALgB,GADf;AAQXC,EAAAA,UAAU,EAAE;AACXC,IAAAA,OAAO,EAAC,EADG;AAEXC,IAAAA,eAAe,EAAE,SAFN;AAGXJ,IAAAA,cAAc,EAAE,YAHL;AAIXD,IAAAA,IAAI,EAAE,CAJK;AAKXE,IAAAA,OAAO,EAAE,MALE;AAMXI,IAAAA,SAAS,EAAE,MANA;AAOXC,IAAAA,YAAY,EAAE;AAPH,GARD;AAiBXC,EAAAA,YAAY,EAAC;AACZC,IAAAA,QAAQ,EAAC,CADG;AAEZP,IAAAA,OAAO,EAAE,MAFG;AAGZD,IAAAA,cAAc,EAAE;AAHJ,GAjBF;AAsBXS,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,WAAW,EAAE,EAFD;AAGZC,IAAAA,SAAS,EAAE,EAHC;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAtBH;AA4BXC,EAAAA,aAAa,EAAE;AACbV,IAAAA,eAAe,EAAE,uBADJ;AAEbS,IAAAA,KAAK,EAAE,MAFM;AAGbE,IAAAA,MAAM,EAAE,OAHK;AAIbC,IAAAA,UAAU,EAAE,QAJC;AAKbf,IAAAA,OAAO,EAAE,MALI;AAMbgB,IAAAA,aAAa,EAAE,QANF;AAObC,IAAAA,QAAQ,EAAE;AAPG,GA5BJ;AAqCXC,EAAAA,gBAAgB,EAAE;AAChBlB,IAAAA,OAAO,EAAE,MADO;AAEhBgB,IAAAA,aAAa,EAAE,QAFC;AAGhBlB,IAAAA,IAAI,EAAE,CAHU;AAIhBiB,IAAAA,UAAU,EAAE,QAJI;AAKhBhB,IAAAA,cAAc,EAAE;AALA,GArCP;AA6CXoB,EAAAA,QAAQ,EAAE;AACRL,IAAAA,MAAM,EAAE,OADA;AAERM,IAAAA,SAAS,EAAE;AAFH,GA7CC;AAiDXC,EAAAA,cAAc,EAAE;AACdvB,IAAAA,IAAI,EAAE,CADQ;AAEdiB,IAAAA,UAAU,EAAE,QAFE;AAGdhB,IAAAA,cAAc,EAAE,QAHF;AAIdC,IAAAA,OAAO,EAAE;AAJK,GAjDL;AAuDXsB,EAAAA,WAAW,EAAE;AACXlB,IAAAA,SAAS,EAAE,QADA;AAEXG,IAAAA,QAAQ,EAAE,KAFC;AAGXa,IAAAA,SAAS,EAAE,QAHA;AAIXH,IAAAA,QAAQ,EAAE,UAJC;AAKXL,IAAAA,KAAK,EAAE;AALI,GAvDF;AA8DXW,EAAAA,SAAS,EAAE;AACTd,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,WAAW,EAAE,EAFJ;AAGTZ,IAAAA,IAAI,EAAE,CAHG;AAITE,IAAAA,OAAO,EAAE,MAJA;AAKTY,IAAAA,KAAK,EAAE,MALE;AAMTQ,IAAAA,SAAS,EAAE;AANF,GA9DA;AAsEXI,EAAAA,QAAQ,EAAE;AACR1B,IAAAA,IAAI,EAAC;AADG,GAtEC;AAyEX2B,EAAAA,SAAS,EAAE;AACTlB,IAAAA,QAAQ,EAAC,EADA;AAETV,IAAAA,YAAY,EAAE;AAFL,GAzEA;AA6EX6B,EAAAA,gBAAgB,EAAE;AAChBnB,IAAAA,QAAQ,EAAC,EADO;AAEhBO,IAAAA,MAAM,EAAE,EAFQ;AAGhBF,IAAAA,KAAK,EAAE,UAHS;AAIhBZ,IAAAA,OAAO,EAAE,MAJO;AAKhBD,IAAAA,cAAc,EAAE,QALA;AAMhBgB,IAAAA,UAAU,EAAE,QANI;AAOhBK,IAAAA,SAAS,EAAE,QAPK;AAQhBjB,IAAAA,eAAe,EAAE,SARD;AAShBwB,IAAAA,WAAW,EAAE;AATG,GA7EP;AAwFXC,EAAAA,OAAO,EAAE;AACPX,IAAAA,QAAQ,EAAE,UADH;AAEPY,IAAAA,KAAK,EAAE,EAFA;AAGPtB,IAAAA,QAAQ,EAAE,OAHH;AAIPH,IAAAA,SAAS,EAAE,QAJJ;AAKP0B,IAAAA,MAAM,EAAE,CALD;AAMPC,IAAAA,KAAK,EAAE;AANA;AAxFE,CAAb;;AAkGC,MAAMC,aAAN,SAA4BxC,SAA5B,CAAsC;AACtCyC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB,QAAI;AAACD,MAAAA,OAAD;AAAUD,MAAAA,QAAV;AAAoBG,MAAAA;AAApB,QAAiC,KAAKL,KAA1C;;AAEA,QAAGE,QAAH,EAAY;AACX,WAAKI,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEA;AAAX,OAAd;AACA;;AAED,QAAGC,OAAH,EAAW;AACV,WAAKG,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACA;AAED;;AAEDI,EAAAA,oBAAoB,GAAE,CACrB;;AAGDC,EAAAA,MAAM,GAAE;AACP,UAAM;AAACN,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAsB,KAAKF,KAAjC;AAEA,QAAI;AAACQ,MAAAA;AAAD,QAAiB,KAAKR,KAA1B;AAEA,wBACC,QAAC,GAAD;AAAK,MAAA,KAAK,EAAExC,MAAM,CAACC,wBAAnB;AAAA,6BACC,QAAC,SAAD;AAAA,gCACC,QAAC,GAAD;AAAK,UAAA,KAAK,EAAED,MAAM,CAACW,YAAnB;AAAA,oBACE8B;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEzC,MAAM,CAACM,UAAnB;AAAA,oBACEoC;AADF;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AA5CqC;;AA+CvC,eAAeL,aAAf","sourcesContent":["import React, {Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\n\nlet styles = {\n  currentUserTextContainer: {\n  \tmarginBottom: 10,\n  \tflex: 0,\n  \t// width: 300,\n  \tjustifyContent: 'flex-start',\n  \tdisplay: 'flex',\n  },\n  textBubble: {\n  \tpadding:10,\n  \tbackgroundColor: '#E6E6E6',\n  \tjustifyContent: 'flex-start',\n  \tflex: 0,\n  \tdisplay: 'flex',\n  \ttextAlign: 'left',\n  \tborderRadius: 8,\n  },\n  usernameText:{\n  \tfontSize:9,\n  \tdisplay: 'flex',\n  \tjustifyContent: 'flex-start',\n  },\n  dadJokesLogo: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    width: '70vh'\n  },\n  bodyContainer: {\n    backgroundColor: 'rgba(52, 52, 52, 0.0)',\n    width: '70vh',\n    height: '100vh',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute'\n  },\n  dadJokeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n  middleBG: {\n    height: '100vh',\n    alignSelf: 'center'\n  },\n  dadJokeTextRow: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex'\n  },\n  dadJokeText: {\n    textAlign: 'center',\n    fontSize: '3vh',\n    alignSelf: 'center',\n    position: 'absolute',\n    width: '60vh'\n  },\n  jokeBoxBG: {\n    marginLeft: 50,\n    marginRight: 50,\n    flex: 2,\n    display: 'flex',\n    width: '65vh',\n    alignSelf: 'center',\n  },\n  gifFrame: {\n    flex:2,\n  },\n  giphyLink: {\n    fontSize:15,\n    marginBottom: 50,\n  },\n  getDadJokeButton: {\n    fontSize:25,\n    height: 40,\n    width: \"73.375vh\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: '#F7931E',\n    borderWidth: 0,\n  },\n  credits: {\n    position: 'absolute',\n    right: 15,\n    fontSize: '1.5vw',\n    textAlign: 'center',\n    bottom: 0,\n    color: '#E6E6E6'\n  }\n}\n\n class OtherUserText extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tusername: '',\n\t    \tmessage: '',\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\tvar {message, username, timestamp} = this.props\n\n\t\tif(username){\n\t\t\tthis.setState({username: username})\n\t\t}\n\n\t\tif(message){\n\t\t\tthis.setState({message: message})\n\t\t}\n\n\t}\n\n\tcomponentWillUnmount(){\n\t}\n\n\t\n\trender(){\n\t\tconst {username, message} = this.state\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Row style={styles.currentUserTextContainer}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row style={styles.usernameText}>\n\t\t\t\t\t\t{username}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={styles.textBubble}>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OtherUserText;"]},"metadata":{},"sourceType":"module"}