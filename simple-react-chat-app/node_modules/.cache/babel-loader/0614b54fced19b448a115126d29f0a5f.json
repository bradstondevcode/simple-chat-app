{"ast":null,"code":"var _jsxFileName = \"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Row, Container } from 'react-bootstrap';\nimport { socket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUsername: \"User1\",\n      currentUserID: 1,\n      message: '',\n      chatRoomData: []\n    };\n  }\n\n  componentDidMount() {\n    // localStorage.removeItem('userID')\n    // localStorage.removeItem('username')\n    let userIDVal = localStorage.getItem('userID');\n    let usernameVal = localStorage.getItem('username');\n\n    if (!userIDVal) {\n      socket.on(\"SetUserData\", userData => {\n        localStorage.setItem('userID', userData.userID);\n        localStorage.setItem('username', userData.username);\n        console.log(userData);\n        this.setState({\n          currentUsername: userData.username,\n          currentUserID: userData.userID\n        });\n        socket.emit(\"UserEnteredRoom\", userData);\n      });\n      socket.emit(\"CreateUserData\");\n    } else {\n      this.setState({\n        currentUsername: usernameVal,\n        currentUserID: userIDVal\n      });\n      socket.emit(\"UserEnteredRoom\", {\n        userID: userIDVal,\n        username: usernameVal\n      });\n    } // //Get game data from server\n    // socket.emit(\"UserEnteredRoom\", \"Player Entered Room!!!\")\n    //Retrieve game data (from GetGameData socket call)\n\n\n    socket.on(\"RetrieveChatRoomData\", chatRoomData => {\n      this.setState({\n        chatRoomData: chatRoomData\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    socket.emit(\"disconnect\", {\n      username: this.state.currentUsername,\n      userID: this.state.currentUserID\n    });\n    socket.off(\"RetrieveChatRoomData\");\n    socket.off(\"SetUserData\");\n  }\n\n  setMessage(message) {\n    this.setState({\n      message: message\n    });\n  }\n\n  sendMessageData() {\n    var {\n      message,\n      currentUsername,\n      currentUserID\n    } = this.state;\n\n    if (message.length > 0) {\n      socket.emit(\"SendMessage\", {\n        message: message,\n        username: currentUsername,\n        userID: currentUserID,\n        timeStamp: null\n      });\n      this.setState({\n        message: ''\n      });\n    }\n  }\n\n  render() {\n    let {\n      chatRoomData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), chatRoomData.map((messageData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [messageData.username, \": \", messageData.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter Message\",\n        variant: \"outlined\",\n        value: this.state.message,\n        onChange: event => this.setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.sendMessageData(),\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js"],"names":["React","Component","Button","TextField","Row","Container","socket","ChatRoom","constructor","props","state","currentUsername","currentUserID","message","chatRoomData","componentDidMount","userIDVal","localStorage","getItem","usernameVal","on","userData","setItem","userID","username","console","log","setState","emit","componentWillUnmount","off","setMessage","sendMessageData","length","timeStamp","render","map","messageData","index","event","target","value"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Row, Container } from 'react-bootstrap';\n\nimport {socket} from '../services/socket'\n\n\n\n class ChatRoom extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tcurrentUsername: \"User1\",\n\t    \tcurrentUserID: 1,\n\t    \tmessage: '',\n\t    \tchatRoomData: [\n\t    \t]\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\n\t\t// localStorage.removeItem('userID')\n\t\t// localStorage.removeItem('username')\n\n\t\tlet userIDVal = localStorage.getItem('userID')\n\t\tlet usernameVal = localStorage.getItem('username')\n\n\t\tif(!userIDVal){\n\n\t      socket.on(\"SetUserData\", userData => {\n\t        \n\t        localStorage.setItem('userID', userData.userID)\n\t        localStorage.setItem('username', userData.username)\n\t        console.log(userData)\n\n\t        this.setState({currentUsername: userData.username, currentUserID: userData.userID})\n\n\t        socket.emit(\"UserEnteredRoom\", userData)\n\t      });\n\n\t      socket.emit(\"CreateUserData\")\n\t    } \n\t    else {\n\t    this.setState({currentUsername: usernameVal, currentUserID: userIDVal})\n\t      socket.emit(\"UserEnteredRoom\", {userID: userIDVal, username: usernameVal})\n\t    }\n\n\n\t\t// //Get game data from server\n\t\t// socket.emit(\"UserEnteredRoom\", \"Player Entered Room!!!\")\n\n\t    //Retrieve game data (from GetGameData socket call)\n\t    socket.on(\"RetrieveChatRoomData\", (chatRoomData) => {\n\t    \tthis.setState({chatRoomData: chatRoomData})\n\t    })\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\tsocket.emit(\"disconnect\", {username: this.state.currentUsername, userID: this.state.currentUserID})\n\t\tsocket.off(\"RetrieveChatRoomData\")\n\t\tsocket.off(\"SetUserData\")\n\t}\n\n\tsetMessage(message){\n\t\tthis.setState({message: message})\n\t}\n\n\tsendMessageData(){\n\t\tvar {message, currentUsername, currentUserID} = this.state\n\n\t\tif(message.length > 0){\n\n\t\t\tsocket.emit(\"SendMessage\", {message: message, username: currentUsername, userID: currentUserID, timeStamp: null})\n\n\t\t\tthis.setState({message: ''})\n\t\t}\n\t}\n\n\n\trender(){\n\n\t\tlet {chatRoomData} = this.state\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<h1>Chat Room</h1>\n\n\t\t\t\t{chatRoomData.map( (messageData, index) => \n\n\t    \t\t\t<div>{messageData.username}: {messageData.message}</div>\n\t    \t\t)}\n\n  \t\t\t\t<TextField \n\t    \t\t\tid=\"outlined-basic\" \n\t    \t\t\tlabel=\"Enter Message\" \n\t    \t\t\tvariant=\"outlined\"  \n\t    \t\t\tvalue={this.state.message} \n\t    \t\t\tonChange={(event) => this.setMessage(event.target.value)}\n\t    \t\t/>\n\n\t    \t\t<Button variant=\"contained\" color=\"primary\" onClick={() => this.sendMessageData()}>\n\t\t\t \t\t Send Message\n\t\t\t\t</Button>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}