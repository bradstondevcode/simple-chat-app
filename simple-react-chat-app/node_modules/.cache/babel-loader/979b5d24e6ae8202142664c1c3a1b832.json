{"ast":null,"code":"var _jsxFileName = \"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Row, Container } from 'react-bootstrap';\nimport { socket } from '../services/socket';\nimport CurrentUserText from '../components/CurrentUserText';\nimport OtherUserText from '../components/OtherUserText';\nimport ChatNotification from '../components/ChatNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet styles = {\n  chatRoomContainer: {\n    marginTop: 10 // border: '1px solid rgba(0, 0, 0, 0.2)',\t\n    // borderTopLeftRadius: 8,\n    // backgroundColor: 'red'\n\n  },\n  headerText: {\n    height: \"5vh\",\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    fontSize: 20,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8\n  },\n  chatThread: {\n    backgroundColor: 'rgba(227, 227, 227, 0.2)',\n    flex: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    height: \"75vh\",\n    overflowY: 'auto',\n    width: '35vw',\n    alignSelf: 'center',\n    padding: 20,\n    paddingBottom: 40,\n    border: '1px solid rgba(0, 0, 0, 0.2)'\n  },\n  messageInputSection: {\n    // height: \"5vh\",\n    display: 'flex',\n    justifyContent: 'flex-start',\n    border: '1px solid rgba(0, 0, 0, 0.2)',\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8\n  },\n  messageTextField: {\n    flex: 1\n  },\n  messageSubmitButton: {\n    flex: 0\n  }\n};\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUsername: \"User1\",\n      currentUserID: 1,\n      message: '',\n      chatRoomData: [],\n      initialLoad: true\n    };\n    this.messagesEndRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    // localStorage.removeItem('userID')\n    // localStorage.removeItem('username')\n    let userIDVal = localStorage.getItem('userID');\n    let usernameVal = localStorage.getItem('username');\n\n    if (!userIDVal) {\n      socket.on(\"SetUserData\", userData => {\n        localStorage.setItem('userID', userData.userID);\n        localStorage.setItem('username', userData.username);\n        console.log(userData);\n        this.setState({\n          currentUsername: userData.username,\n          currentUserID: userData.userID\n        });\n        socket.emit(\"UserEnteredRoom\", userData);\n      });\n      socket.emit(\"CreateUserData\");\n    } else {\n      console.log(usernameVal);\n      this.setState({\n        currentUsername: usernameVal,\n        currentUserID: userIDVal\n      });\n      socket.emit(\"UserEnteredRoom\", {\n        userID: userIDVal,\n        username: usernameVal\n      });\n    } //Retrieve game data (from GetGameData socket call)\n\n\n    socket.on(\"RetrieveChatRoomData\", chatRoomData => {\n      this.setState({\n        chatRoomData: chatRoomData\n      }, () => this.shouldScrollToBottom());\n    });\n  }\n\n  componentDidUpdate() {// this.scrollToBottom()\n  }\n\n  componentWillUnmount() {\n    // socket.emit(\"disconnect\", {username: this.state.currentUsername, userID: this.state.currentUserID})\n    socket.off(\"RetrieveChatRoomData\");\n    socket.off(\"SetUserData\");\n  }\n\n  setMessage(message) {\n    this.setState({\n      message: message\n    });\n  }\n\n  sendMessageData() {\n    var {\n      message,\n      currentUsername,\n      currentUserID\n    } = this.state;\n\n    if (message.length > 0) {\n      socket.emit(\"SendMessage\", {\n        message: message,\n        username: currentUsername,\n        userID: currentUserID,\n        timeStamp: null\n      });\n      this.setState({\n        message: ''\n      });\n    }\n  }\n\n  shouldScrollToBottom() {\n    if (this.messagesEndRef.current.scrollHeight - this.messagesEndRef.current.scrollTop < this.messagesEndRef.current.offsetHeight + 100) {\n      this.scrollToBottom();\n    }\n\n    if (this.state.initialLoad) {\n      this.scrollToBottom();\n      this.setState({\n        initialLoad: false\n      });\n    }\n  }\n\n  scrollToBottom() {\n    this.messagesEndRef.current.scrollTop = this.messagesEndRef.current.scrollHeight;\n    console.log(this.messagesEndRef.current.scrollTop);\n    console.log(this.messagesEndRef.current.scrollHeight);\n    console.log(this.messagesEndRef);\n  }\n\n  render() {\n    let {\n      chatRoomData,\n      currentUsername\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: styles.chatRoomContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.headerText,\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: styles.chatThread,\n        ref: this.messagesEndRef,\n        children: chatRoomData.map((messageData, index) => {\n          if (messageData.username == currentUsername) {\n            return /*#__PURE__*/_jsxDEV(CurrentUserText, {\n              username: messageData.username,\n              message: messageData.message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 18\n            }, this);\n          } else if (messageData.username == '') {\n            return /*#__PURE__*/_jsxDEV(ChatNotification, {\n              username: messageData.username,\n              message: messageData.message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 18\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(OtherUserText, {\n              username: messageData.username,\n              message: messageData.message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 18\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: styles.messageInputSection,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: styles.messageTextField,\n          id: \"outlined-basic\",\n          label: \"Enter Message\",\n          variant: \"outlined\",\n          value: this.state.message,\n          onChange: event => this.setMessage(event.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              console.log('Enter key pressed');\n              this.sendMessageData(); // write your functionality here\n            }\n          },\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: styles.messageSubmitButton,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => this.sendMessageData(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js"],"names":["React","Component","Button","TextField","IconButton","InputAdornment","SendIcon","Row","Container","socket","CurrentUserText","OtherUserText","ChatNotification","styles","chatRoomContainer","marginTop","headerText","height","backgroundColor","alignItems","justifyContent","display","fontSize","borderTopLeftRadius","borderTopRightRadius","chatThread","flex","flexDirection","overflowY","width","alignSelf","padding","paddingBottom","border","messageInputSection","borderBottomLeftRadius","borderBottomRightRadius","messageTextField","messageSubmitButton","ChatRoom","constructor","props","state","currentUsername","currentUserID","message","chatRoomData","initialLoad","messagesEndRef","createRef","componentDidMount","userIDVal","localStorage","getItem","usernameVal","on","userData","setItem","userID","username","console","log","setState","emit","shouldScrollToBottom","componentDidUpdate","componentWillUnmount","off","setMessage","sendMessageData","length","timeStamp","current","scrollHeight","scrollTop","offsetHeight","scrollToBottom","render","map","messageData","index","event","target","value","e","key"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Row, Container } from 'react-bootstrap';\n\nimport {socket} from '../services/socket'\n\nimport CurrentUserText from '../components/CurrentUserText'\nimport OtherUserText from '../components/OtherUserText'\nimport ChatNotification from '../components/ChatNotification'\n\nlet styles = {\n\tchatRoomContainer: {\n\t\tmarginTop: 10,\n\t\t// border: '1px solid rgba(0, 0, 0, 0.2)',\t\n\t\t// borderTopLeftRadius: 8,\n\t\t// backgroundColor: 'red'\n\t},\n\theaderText: {\n\t\theight: \"5vh\",\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.25)',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tdisplay: 'flex',\n\t\tfontSize: 20,\n\t\tborderTopLeftRadius: 8,\n\t\tborderTopRightRadius: 8,\n\t},\n\tchatThread: {\n\t\tbackgroundColor: 'rgba(227, 227, 227, 0.2)',\n\t\tflex: 0,\n\t\tdisplay: 'flex',\n    \tflexDirection: 'column',\n    \theight: \"75vh\",\n    \toverflowY: 'auto',\n    \twidth: '35vw',\n    \talignSelf: 'center',\n    \tpadding: 20,\n    \tpaddingBottom: 40,\n    \tborder: '1px solid rgba(0, 0, 0, 0.2)'\n\t},\n\tmessageInputSection: {\n\t\t// height: \"5vh\",\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-start',\n\t\tborder: '1px solid rgba(0, 0, 0, 0.2)',\n\t\tborderBottomLeftRadius: 8,\n\t\tborderBottomRightRadius: 8,\n\t},\n\tmessageTextField: {\n\t\tflex: 1\n\t},\n\tmessageSubmitButton: {\n\t\tflex: 0\n\t}\n\n}\n\n\n\nclass ChatRoom extends Component {\n\n\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tcurrentUsername: \"User1\",\n\t    \tcurrentUserID: 1,\n\t    \tmessage: '',\n\t    \tchatRoomData: [\n\t    \t],\n\t    \tinitialLoad: true,\n\t    };\n\n\t    this.messagesEndRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\n\t\t// localStorage.removeItem('userID')\n\t\t// localStorage.removeItem('username')\n\n\t\tlet userIDVal = localStorage.getItem('userID')\n\t\tlet usernameVal = localStorage.getItem('username')\n\n\t\tif(!userIDVal){\n\n\t      socket.on(\"SetUserData\", userData => {\n\t        \n\t        localStorage.setItem('userID', userData.userID)\n\t        localStorage.setItem('username', userData.username)\n\t        console.log(userData)\n\n\t        this.setState({currentUsername: userData.username, currentUserID: userData.userID})\n\n\t        socket.emit(\"UserEnteredRoom\", userData)\n\t      });\n\n\t      socket.emit(\"CreateUserData\")\n\t    } \n\t    else {\n\t    \tconsole.log(usernameVal)\n\t    \tthis.setState({currentUsername: usernameVal, currentUserID: userIDVal})\n\t    \tsocket.emit(\"UserEnteredRoom\", {userID: userIDVal, username: usernameVal})\n\t    }\n\n\t    //Retrieve game data (from GetGameData socket call)\n\t    socket.on(\"RetrieveChatRoomData\", (chatRoomData) => {\n\t    \tthis.setState({chatRoomData: chatRoomData}, () => this.shouldScrollToBottom())\n\t    })\n\n\t}\n\n\tcomponentDidUpdate () {\n\t\t// this.scrollToBottom()\n\t}\n\n\tcomponentWillUnmount(){\n\t\t// socket.emit(\"disconnect\", {username: this.state.currentUsername, userID: this.state.currentUserID})\n\t\tsocket.off(\"RetrieveChatRoomData\")\n\t\tsocket.off(\"SetUserData\")\n\t}\n\n\tsetMessage(message){\n\t\tthis.setState({message: message})\n\t}\n\n\tsendMessageData(){\n\t\tvar {message, currentUsername, currentUserID} = this.state\n\n\t\tif(message.length > 0){\n\n\t\t\tsocket.emit(\"SendMessage\", {message: message, username: currentUsername, userID: currentUserID, timeStamp: null})\n\n\t\t\tthis.setState({message: ''})\n\t\t}\n\t}\n\n\tshouldScrollToBottom(){\n\t\tif (this.messagesEndRef.current.scrollHeight - this.messagesEndRef.current.scrollTop < this.messagesEndRef.current.offsetHeight + 100){\n\t\t\tthis.scrollToBottom()\n\t\t}\n\n\t\tif(this.state.initialLoad){\n\t\t\tthis.scrollToBottom()\n\t\t\tthis.setState({initialLoad: false})\n\t\t}\n\t}\n\n\tscrollToBottom(){\n\t\tthis.messagesEndRef.current.scrollTop = this.messagesEndRef.current.scrollHeight\n\n\t\tconsole.log(this.messagesEndRef.current.scrollTop)\n\t\tconsole.log(this.messagesEndRef.current.scrollHeight)\n\t\tconsole.log(this.messagesEndRef)\n\t}\n\n\n\trender(){\n\n\t\tlet {chatRoomData, currentUsername} = this.state\n\n\t\treturn (\n\t\t\t<Container style = {styles.chatRoomContainer}>\n\t\t\t\t<div style={styles.headerText}>Chat Room</div>\n\n\t\t\t\t<Container style={styles.chatThread} ref={this.messagesEndRef}>\n\t\t\t\t\t{chatRoomData.map( (messageData, index) => {\n\t\t\t\t\t\tif(messageData.username == currentUsername) {\n\t\t\t    \t\t\treturn <CurrentUserText key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t} else if (messageData.username == '') {\n\t\t\t    \t\t\treturn <ChatNotification key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t} else {\n\t\t\t    \t\t\treturn <OtherUserText key={index} username={messageData.username} message={messageData.message}/>\n\t\t\t    \t\t}\n\t\t\t\t\t}\n\t\t    \t\t\t\n\t\t    \t\t)}\n\n\t  \t\t\t\t\n\t    \t\t</Container>\n\n\t    \t\t<Container style={styles.messageInputSection}>\n\t\t\t    \t\t<TextField \n\t\t\t    \t\t\tstyle= {styles.messageTextField}\n\t\t\t    \t\t\tid=\"outlined-basic\" \n\t\t\t    \t\t\tlabel=\"Enter Message\" \n\t\t\t    \t\t\tvariant=\"outlined\"  \n\t\t\t    \t\t\tvalue={this.state.message} \n\t\t\t    \t\t\tonChange={(event) => this.setMessage(event.target.value)}\n\t\t\t    \t\t\tonKeyPress= {(e) => {\n\t\t\t\t\t            if (e.key === 'Enter') {\n\t\t\t\t\t              console.log('Enter key pressed');\n\t\t\t\t\t              this.sendMessageData()\n\t\t\t\t\t              // write your functionality here\n\t\t\t\t\t            }\n\t\t\t\t\t\t    }}\n\t\t\t\t\t\t    endAdornment={\n\t\t\t\t\t\t    \t<InputAdornment position=\"end\">\n\t\t\t\t\t\t    \t\t<IconButton\n\t\t\t\t\t                  aria-label=\"toggle password visibility\"\n\t\t\t\t\t                >\n\t\t\t\t\t                  \n\t\t\t\t\t                </IconButton>\n\t\t\t\t\t\t    \t</InputAdornment>\n\t\t\t\t\t\t    }\n\t\t\t    \t\t/>\n\t\t\t    \t\t<Button style= {styles.messageSubmitButton} variant=\"contained\" color=\"primary\" onClick={() => this.sendMessageData()}>\n\t\t\t\t\t \t\t Send\n\t\t\t\t\t\t</Button>\n\t\t\t\t</Container>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}