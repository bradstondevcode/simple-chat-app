{"ast":null,"code":"var _jsxFileName = \"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Row, Container } from 'react-bootstrap';\nimport { socket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      chatRoomData: []\n    };\n  }\n\n  componentDidMount() {\n    //Get game data from server\n    socket.emit(\"EnterRoom\", \"Player Entered Room!!!\"); //Retrieve game data (from GetGameData socket call)\n\n    socket.on(\"RetrieveChatRoomData\", chatRoomData => {\n      console.log(chatRoomData);\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"RetrieveChatRoomData\");\n  }\n\n  setMessage(message) {\n    this.setState({\n      message: message\n    });\n  }\n\n  sendMessage() {\n    var {\n      message\n    } = this.state;\n\n    if (message.length > 0) {\n      socket.emit(\"SendMessage\", message);\n      this.setState({\n        message: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter Message\",\n        variant: \"outlined\",\n        value: this.state.message,\n        onChange: event => this.setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.sendMessage(),\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js"],"names":["React","Component","Button","TextField","Row","Container","socket","ChatRoom","constructor","props","state","message","chatRoomData","componentDidMount","emit","on","console","log","componentWillUnmount","off","setMessage","setState","sendMessage","length","render","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;AAEA,SAAQC,MAAR,QAAqB,oBAArB;;;AAIC,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,YAAY,EAAE;AAFF,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB;AACAP,IAAAA,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyB,wBAAzB,EAFkB,CAIf;;AACAR,IAAAA,MAAM,CAACS,EAAP,CAAU,sBAAV,EAAmCH,YAAD,IAAkB;AACnDI,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,KAFD;AAIH;;AAEDM,EAAAA,oBAAoB,GAAE;AACrBZ,IAAAA,MAAM,CAACa,GAAP,CAAW,sBAAX;AACA;;AAEDC,EAAAA,UAAU,CAACT,OAAD,EAAS;AAClB,SAAKU,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACA;;AAEDW,EAAAA,WAAW,GAAE;AACZ,QAAI;AAACX,MAAAA;AAAD,QAAY,KAAKD,KAArB;;AAEA,QAAGC,OAAO,CAACY,MAAR,GAAiB,CAApB,EAAsB;AAErBjB,MAAAA,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BH,OAA3B;AAEA,WAAKU,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA;AACD;;AAGDa,EAAAA,MAAM,GAAE;AAEP,wBACC,QAAC,SAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGG,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,OAJpB;AAKE,QAAA,QAAQ,EAAGc,KAAD,IAAW,KAAKL,UAAL,CAAgBK,KAAK,CAACC,MAAN,CAAaC,KAA7B;AALvB;AAAA;AAAA;AAAA;AAAA,cAHH,eAYI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,MAAM,KAAKL,WAAL,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAmBA;;AA9DgC;;AAiElC,eAAef,QAAf","sourcesContent":["import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Row, Container } from 'react-bootstrap';\n\nimport {socket} from '../services/socket'\n\n\n\n class ChatRoom extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tmessage: '',\n\t    \tchatRoomData: []\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\t//Get game data from server\n\t\tsocket.emit(\"EnterRoom\", \"Player Entered Room!!!\")\n\n\t    //Retrieve game data (from GetGameData socket call)\n\t    socket.on(\"RetrieveChatRoomData\", (chatRoomData) => {\n\t    \tconsole.log(chatRoomData)\n\t    })\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\tsocket.off(\"RetrieveChatRoomData\")\n\t}\n\n\tsetMessage(message){\n\t\tthis.setState({message: message})\n\t}\n\n\tsendMessage(){\n\t\tvar {message} = this.state\n\n\t\tif(message.length > 0){\n\n\t\t\tsocket.emit(\"SendMessage\", message)\n\n\t\t\tthis.setState({message: ''})\n\t\t}\n\t}\n\n\n\trender(){\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<h1>Chat Room</h1>\n\n  \t\t\t\t<TextField \n\t    \t\t\tid=\"outlined-basic\" \n\t    \t\t\tlabel=\"Enter Message\" \n\t    \t\t\tvariant=\"outlined\"  \n\t    \t\t\tvalue={this.state.message} \n\t    \t\t\tonChange={(event) => this.setMessage(event.target.value)}\n\t    \t\t/>\n\n\n\t    \t\t<Button variant=\"contained\" color=\"primary\" onClick={() => this.sendMessage()}>\n\t\t\t \t\t Send Message\n\t\t\t\t</Button>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}