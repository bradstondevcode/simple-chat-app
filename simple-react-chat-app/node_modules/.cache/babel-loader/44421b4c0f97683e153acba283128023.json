{"ast":null,"code":"var _require = require(\"./commons\"),\n    PACKET_TYPES = _require.PACKET_TYPES;\n\nvar withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\nvar withNativeArrayBuffer = typeof ArrayBuffer === \"function\"; // ArrayBuffer.isView method is not defined in IE10\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nvar encodePacket = function encodePacket(_ref, supportsBinary, callback) {\n  var type = _ref.type,\n      data = _ref.data;\n\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  } // plain string\n\n\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nvar encodeBlobAsBase64 = function encodeBlobAsBase64(data, callback) {\n  var fileReader = new FileReader();\n\n  fileReader.onload = function () {\n    var content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/engine.io-parser/lib/encodePacket.browser.js"],"names":["require","PACKET_TYPES","withNativeBlob","Blob","Object","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","type","data","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","module","exports"],"mappings":"AAAA,eAAyBA,OAAO,CAAC,WAAD,CAAhC;AAAA,IAAQC,YAAR,YAAQA,YAAR;;AAEA,IAAMC,cAAc,GAClB,OAAOC,IAAP,KAAgB,UAAhB,IACC,OAAOA,IAAP,KAAgB,WAAhB,IACCC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,MAAyC,0BAH7C;AAIA,IAAMK,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,UAArD,C,CAEA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;AACpB,SAAO,OAAOF,WAAW,CAACC,MAAnB,KAA8B,UAA9B,GACHD,WAAW,CAACC,MAAZ,CAAmBC,GAAnB,CADG,GAEHA,GAAG,IAAIA,GAAG,CAACC,MAAJ,YAAsBH,WAFjC;AAGD,CAJD;;AAMA,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAiBC,cAAjB,EAAiCC,QAAjC,EAA8C;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;;AACjE,MAAIf,cAAc,IAAIe,IAAI,YAAYd,IAAtC,EAA4C;AAC1C,QAAIW,cAAJ,EAAoB;AAClB,aAAOC,QAAQ,CAACE,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOC,kBAAkB,CAACD,IAAD,EAAOF,QAAP,CAAzB;AACD;AACF,GAND,MAMO,IACLP,qBAAqB,KACpBS,IAAI,YAAYR,WAAhB,IAA+BC,MAAM,CAACO,IAAD,CADjB,CADhB,EAGL;AACA,QAAIH,cAAJ,EAAoB;AAClB,aAAOC,QAAQ,CAACE,IAAI,YAAYR,WAAhB,GAA8BQ,IAA9B,GAAqCA,IAAI,CAACL,MAA3C,CAAf;AACD,KAFD,MAEO;AACL,aAAOM,kBAAkB,CAAC,IAAIf,IAAJ,CAAS,CAACc,IAAD,CAAT,CAAD,EAAmBF,QAAnB,CAAzB;AACD;AACF,GAhBgE,CAiBjE;;;AACA,SAAOA,QAAQ,CAACd,YAAY,CAACe,IAAD,CAAZ,IAAsBC,IAAI,IAAI,EAA9B,CAAD,CAAf;AACD,CAnBD;;AAqBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAOF,QAAP,EAAoB;AAC7C,MAAMI,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,EAAAA,UAAU,CAACE,MAAX,GAAoB,YAAW;AAC7B,QAAMC,OAAO,GAAGH,UAAU,CAACI,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAhB;AACAT,IAAAA,QAAQ,CAAC,MAAMO,OAAP,CAAR;AACD,GAHD;;AAIA,SAAOH,UAAU,CAACM,aAAX,CAAyBR,IAAzB,CAAP;AACD,CAPD;;AASAS,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n"]},"metadata":{},"sourceType":"script"}