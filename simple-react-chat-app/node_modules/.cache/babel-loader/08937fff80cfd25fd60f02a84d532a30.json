{"ast":null,"code":"var _jsxFileName = \"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Row, Container } from 'react-bootstrap';\nimport TestButton from '../components/TestButton';\nimport { Grid, GridRow } from \"../components/GridComponents\";\nimport Tile from '../components/Tile'; // import { Grid, Row, Col } from 'react-flexbox-grid';\n\nimport { socket } from '../services/socket';\nimport terrain1 from '../res/images/terrain-1.png';\nimport landscape from '../res/images/landscape.png';\nimport island from '../res/images/island.png';\nimport tree1 from '../res/images/tree-1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    //Get game data from server\n    socket.emit(\"EnterRoom\", \"Player Entered Room!!!\"); //Retrieve game data (from GetGameData socket call)\n\n    socket.on(\"RetrieveChatRoomData\", chatRoomData => {\n      console.log(chatRoomData);\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"RetrieveChatRoomData\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/src/pages/ChatRoom.js"],"names":["React","Component","Button","Row","Container","TestButton","Grid","GridRow","Tile","socket","terrain1","landscape","island","tree1","ChatRoom","constructor","props","state","componentDidMount","emit","on","chatRoomData","console","log","componentWillUnmount","off","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA6B,8BAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AAEA,SAAQC,MAAR,QAAqB,oBAArB;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAIC,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AACjCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyB,wBAAzB,EAFkB,CAIf;;AACAV,IAAAA,MAAM,CAACW,EAAP,CAAU,sBAAV,EAAmCC,YAAD,IAAkB;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,KAFD;AAIH;;AAEDG,EAAAA,oBAAoB,GAAE;AACrBf,IAAAA,MAAM,CAACgB,GAAP,CAAW,sBAAX;AACA;;AAGDC,EAAAA,MAAM,GAAE;AAEP,wBACC,QAAC,SAAD;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAhCgC;;AAmClC,eAAeZ,QAAf","sourcesContent":["import React, {Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Row, Container } from 'react-bootstrap';\nimport TestButton from '../components/TestButton'\n\nimport { Grid, GridRow} from \"../components/GridComponents\";\nimport Tile from '../components/Tile'\n\n// import { Grid, Row, Col } from 'react-flexbox-grid';\n\nimport {socket} from '../services/socket'\n\nimport terrain1 from '../res/images/terrain-1.png'\nimport landscape from '../res/images/landscape.png'\nimport island from '../res/images/island.png'\nimport tree1 from '../res/images/tree-1.png'\n\n\n\n class ChatRoom extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \t\n\t    };\n\n\t}\n\n\tcomponentDidMount(){\n\t\t//Get game data from server\n\t\tsocket.emit(\"EnterRoom\", \"Player Entered Room!!!\")\n\n\t    //Retrieve game data (from GetGameData socket call)\n\t    socket.on(\"RetrieveChatRoomData\", (chatRoomData) => {\n\t    \tconsole.log(chatRoomData)\n\t    })\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\tsocket.off(\"RetrieveChatRoomData\")\n\t}\n\n\n\trender(){\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<h1>Chat Room</h1>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}