{"ast":null,"code":"var _classCallCheck = require(\"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/@babel/runtime/helpers/createSuper\");\n\n/* global attachEvent */\nvar XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\n\nvar Polling = require(\"./polling\");\n\nvar Emitter = require(\"component-emitter\");\n\nvar _require = require(\"../util\"),\n    pick = _require.pick;\n\nvar globalThis = require(\"../globalThis\");\n\nvar debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n/**\n * Empty function\n */\n\n\nfunction empty() {}\n\nvar hasXHR2 = function () {\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nvar XHR = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(XHR, _Polling);\n\n  var _super = _createSuper(XHR);\n\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  function XHR(opts) {\n    var _this;\n\n    _classCallCheck(this, XHR);\n\n    _this = _super.call(this, opts);\n\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n\n\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n\n\n  _createClass(XHR, [{\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      var self = this;\n      req.on(\"success\", fn);\n      req.on(\"error\", function (err) {\n        self.onError(\"xhr post error\", err);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      debug(\"xhr poll\");\n      var req = this.request();\n      var self = this;\n      req.on(\"data\", function (data) {\n        self.onData(data);\n      });\n      req.on(\"error\", function (err) {\n        self.onError(\"xhr poll error\", err);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n\n  return XHR;\n}(Polling);\n\nvar Request = /*#__PURE__*/function (_Emitter) {\n  \"use strict\";\n\n  _inherits(Request, _Emitter);\n\n  var _super2 = _createSuper(Request);\n\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  function Request(uri, opts) {\n    var _this2;\n\n    _classCallCheck(this, Request);\n\n    _this2 = _super2.call(this);\n    _this2.opts = opts;\n    _this2.method = opts.method || \"GET\";\n    _this2.uri = uri;\n    _this2.async = false !== opts.async;\n    _this2.data = undefined !== opts.data ? opts.data : null;\n\n    _this2.create();\n\n    return _this2;\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n\n\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new XMLHttpRequest(opts);\n      var self = this;\n\n      try {\n        debug(\"xhr open %s: %s\", this.method, this.uri);\n        xhr.open(this.method, this.uri, this.async);\n\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {} // ie6 check\n\n\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n\n        if (this.hasXDR()) {\n          xhr.onload = function () {\n            self.onLoad();\n          };\n\n          xhr.onerror = function () {\n            self.onError(xhr.responseText);\n          };\n        } else {\n          xhr.onreadystatechange = function () {\n            if (4 !== xhr.readyState) return;\n\n            if (200 === xhr.status || 1223 === xhr.status) {\n              self.onLoad();\n            } else {\n              // make sure the `error` event handler that's user-set\n              // does not throw in the same tick and gets caught here\n              setTimeout(function () {\n                self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n              }, 0);\n            }\n          };\n        }\n\n        debug(\"xhr data %s\", this.data);\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        setTimeout(function () {\n          self.onError(e);\n        }, 0);\n        return;\n      }\n\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess() {\n      this.emit(\"success\");\n      this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      this.emit(\"data\", data);\n      this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emit(\"error\", err);\n      this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      } // xmlhttprequest\n\n\n      if (this.hasXDR()) {\n        this.xhr.onload = this.xhr.onerror = empty;\n      } else {\n        this.xhr.onreadystatechange = empty;\n      }\n\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n\n      this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n\n      if (data !== null) {\n        this.onData(data);\n      }\n    }\n    /**\n     * Check if it has XDomainRequest.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"hasXDR\",\n    value: function hasXDR() {\n      return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n\n  return Request;\n}(Emitter);\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;","map":{"version":3,"sources":["/Users/bradston/Documents/Dev_Advocate/Blog Posts/Create Simple Realtime Chatroom with React, Node and Socket.io/simple-react-chat-app/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"names":["XMLHttpRequest","require","Polling","Emitter","pick","globalThis","debug","empty","hasXHR2","xhr","xdomain","responseType","XHR","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","Object","assign","Request","uri","data","fn","req","request","method","self","on","err","onError","onData","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","emit","cleanup","onSuccess","fromError","abort","XDomainRequest","enablesXDR","attachEvent","unloadHandler","addEventListener","terminationEvent","module","exports"],"mappings":"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","sourcesContent":["/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n"]},"metadata":{},"sourceType":"script"}